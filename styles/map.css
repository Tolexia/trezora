html, body{
    overflow: hidden;
}
body{
    padding-top: var(--navbar-size);
    --responsiveNavbarHeight:96px;
}
[onclick]{
    cursor: pointer;
}
.disabled {
    opacity: .4;
    pointer-events: none;
}

h2 {
    font-size: 1.3em;
}
.row {
    flex-wrap: nowrap;
    margin-left: 0;
    margin-right: 0;
}
.row.column{
    flex-wrap: nowrap;
    justify-content: center;
    align-items: center;
    margin: 0;
    padding: 0;
    max-width: 100%;
}
.map {
    --blockWidth: 120px;
    --blockHeight: 120px;
    --mapVerticalPadding: 1em;
    background-image: url('../images/map/map.jpg');
    background-size: cover;
    background-repeat: no-repeat;
    padding: .5em var(--mapVerticalPadding);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.tile {
    height: var(--blockHeight);
    width: var(--blockWidth);
    background-repeat: no-repeat;
    background-size: cover;
    text-align: center;
    mix-blend-mode: multiply;
    position: relative;
    background-position: center;
    padding: 0 5px;
}

.tile:hover {
    box-shadow: 0 0 1px var(--dark);
}

.sea {
    background-image: url('../images/map/sea.png');
}

.port {
    background-image: url('../images/map/port.png');
    background-size: contain;
}

.island {
    background-image: url('../images/map/island.png');
    background-size: contain;
}
.shark{
    background-image: url('../images/wildlife/requin.png');
    background-size: 70%;
}
.shark:empty:not(.clickable),.kraken:empty:not(.clickable)
{
    filter: invert(1) brightness(0.3) sepia(1);
}
.kraken{
    background-image: url('../images/wildlife/kraken.png');
    background-size: 75%;
}
.shark.clickable,.kraken.clickable
{

}

.north {
    left: 50%;
    top:25%;
}
.south {
    left: 50%;
    top:65%;
}
.west {
    left: 20%;
    top: 44%;
}
.east {
    top: 44%;
    left: 80%;
}
.doublespeed {
    font-size: 25px;
}
.boat {
    max-width: 100%;
    max-height: 100%;
    position:relative;
    z-index: 1;
}

.boat-skin{
    max-width: var(--blockWidth);
    max-height: var(--blockHeight);
    filter: drop-shadow(3px 3px 5px var(--dark));
}
#boat {
    animation: 3s linear myBoat 0s infinite alternate;
    
}
#boat2 {
    animation: 3s linear myBoat 0s infinite alternate;
}
.tile #boat2:nth-child(2)
{
    animation: unset;
    transform: translateY(-110%);
    z-index: 0;
}

.navigation-container{
    height: 100%;
}
.navigation {
    position: relative;
    width: 100%;
    height: 100%;
    padding-top: 0.2em;
    background-position: center;
}
.navigation a {
    position: absolute;
    cursor:pointer;
    font-family: var(--main-font);
    color: white!important;
    font-size: 30px;
}
.navigation a:hover {
    color:grey!important;
}
a.enlightened {
    color : rgba(4,232,0,0.75)!important;
}
.nav-item {
    cursor:pointer;
}
#fightButton.disabled{
    display: none;
}
#fightButton{
    display: block;
}
.fight-icon
{
    filter: invert(1) drop-shadow(0px 0px 20px white);
    width: 2.5em;
}


/* Life bar */
.lifebar
{
    display: block;
    position: absolute;
    top: 60%;
    width: 60%;
    height:5%;
    /* background: rgb(0,255,0); */
    background: linear-gradient(90deg, rgb(41, 255, 41) 0%, rgb(41, 255, 41) 100%, #ff0000 100%); 
    left: 50%;
    transform: translateX(-50%);
    transition: all .6s;
}

/* FIGHT */
#boat.attack
{
    animation: 1s ease-in kickback1;
}
#boat2.attack
{
    animation: 1s ease-in kickback2;
}
.shaken {
	-webkit-animation: shake-bottom 0.8s cubic-bezier(0.455, 0.030, 0.515, 0.955) both;
	        animation: shake-bottom 0.8s cubic-bezier(0.455, 0.030, 0.515, 0.955) both;
}
.defend::after,
.attack::after
{
    display: block;
    content: "";
    height: 2em;
    width: 2em;
    position: absolute;
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    bottom: 10%;
    z-index: 3;
}
.attack::after
{
    background-image: url(../images/fight/nuage.png);
    animation: 1s linear shoot;
}
.defend::after{
    background-image: url(../images/fight/explosion.png);
    animation: 1s linear receiveImpact;
}
#boat.attack::after{
    right: 20%;
    
}
#boat2.attack::after{
    left: 20%;
    
}
.shark.attack, .kraken.attack{
    background: rgba(150, 0, 0, 0.374);
}
.shark.attack::after, .kraken.attack:after{
    content: "";
    display: block;
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 10;
    background-image: url(../images/fight/claw.png);
    background-position: center;
    background-size: contain;
    background-repeat: no-repeat;
}
[data-power][data-quantity]::after{
    display: block;
    content: attr(data-quantity);
    font-size: 14px;
    position: absolute;
    transform: translateY(-50%);
}

.clickable::before {
    content: "";
    display: block;
    position: absolute;
    height: 3em;
    width: 2em;
    left: 50%;
    top: 0;
    transform: translateX(-50%);
    z-index: 20;
    background-image: url(../images/map/fight_creature.svg);
    background-position: center;
    background-size: contain;
    background-repeat: no-repeat;
    filter: drop-shadow(0 4px 6px grey);
    animation-name: rotateMarker;
    animation: rotateMarker 5s linear infinite forwards;
}

/* KEYFRAMES */
@keyframes myBoat2 {
    0% {
        transform: rotate(-5deg) translate(0px, 0px);
    }
    50% {
        transform: translate(5px, 5px);
    }
    100% {
        transform: rotate(5deg) translate(0px, 0px);
    }
}

@keyframes movingEast {
   
    0% {
        transform: rotate(5deg) translate(0px, 0px);
    }
    50% {
        transform:  rotate(5deg) translate(calc( var(--blockWidth) / 2), 5px);
    }
   100% {
        transform:rotate(-5deg) translateX(var(--blockWidth))
        ;
   }
}
@keyframes movingWest {
   
    0%{
        transform: scaleX(-1) translateX(0) rotate(5deg);
    }
    50% {
        transform: scaleX(-1)  rotate(5deg) translate( calc( var(--blockWidth) / 2), 5px);
    }
    100% {
        transform: scaleX(-1) translateX( var(--blockWidth)) rotate(-5deg);
    }
}
@keyframes movingNorth {
   
    0%{
        transform: translate(0,0) rotate(0);
    }
    25% {
        transform:translate(0,0) rotateZ(-68deg) rotateX(60deg);
    }
    75% {
        transform: translateY( calc(var(--blockHeight) * -1)) rotateZ(-68deg) rotateX(60deg);
    }
    100% {
        transform: translateY( calc(var(--blockHeight) * -1)) rotateZ(0) rotateX(0);
    }
}
@keyframes movingSouth {
   
    0%{
        transform: translate(0,0) rotate(0);
    }
    25% {
        transform:translate(0,0) rotateZ(70deg) rotateX(60deg);
    }
    75% {
        transform: translate(10px,  var(--blockHeight)) rotateZ(70deg) rotateX(60deg);
    }
    100% {
        transform:translate(10px,  var(--blockHeight)) rotateZ(0) rotateX(0);
    }
}
@keyframes movingEast2 {
   
    0% {
        transform: scaleX(-1) rotate(5deg) translate(0px, 0px);
    }
    50% {
        transform: scaleX(-1)  rotate(5deg) translate(calc( var(--blockWidth) / -2), 5px);
    }
   100% {
        transform:scaleX(-1) rotate(-5deg) translateX(calc( var(--blockWidth) * -1) )
        ;
   }
}
@keyframes movingWest2 {
   
    0%{
        transform: translateX(0) rotate(5deg);
    }
    50% {
        transform:  rotate(5deg) translate(calc( var(--blockWidth) / -2), 5px);
    }
    100% {
        transform: translateX(calc( var(--blockWidth) * -1)) rotate(-5deg);
    }
}
@keyframes movingNorth2 {
   
    0%{
        transform: translate(0,0) rotate(0);
    }
    25% {
        transform:translate(0,0) rotateZ(68deg) rotateX(-60deg);
    }
    75% {
        transform: translateY( calc(var(--blockHeight) * -1)) rotateZ(68deg) rotateX(-60deg);
    }
    100% {
        transform: translateY( calc(var(--blockHeight) * -1)) rotateZ(0) rotateX(0);
    }
}
@keyframes movingSouth2 {
   
    0%{
        transform: translate(0,0) rotate(0);
    }
    25% {
        transform:translate(0,0) rotateZ(-70deg) rotateX(-60deg);
    }
    75% {
        transform: translate(10px,  var(--blockHeight)) rotateZ(-70deg) rotateX(-60deg);
    }
    100% {
        transform:translate(10px,  var(--blockHeight)) rotateZ(0) rotateX(0);
    }
}
@keyframes death {
   
    0%{
        transform: translateY(0) rotate(0);
        opacity:1;
    }
    50% {
        transform: translateY(0) rotate(-90deg);
        opacity:1;
    }
    100% {
        transform: translateY(20px) rotate(-90deg);
        opacity:0;
    }
}
@keyframes death2 {
   
    0%{
        transform: translateY(0) rotate(0);
        opacity:1;
    }
    50% {
        transform: translateY(0) rotate(90deg);
        opacity:1;
    }
    100% {
        transform: translateY(20px) rotate(90deg);
        opacity:0;
    }
}
@keyframes teleport {
   
    0%{
        transform: rotateY(0);
    }
    50% {
        transform: rotateY(180deg);
    }
    75% {
        transform: rotateY(360deg);
    }
    90% {
        transform: rotateY(540deg);
    }
    95% {
        transform: rotateY(720deg);
    }
    100% {
        transform: rotateY(900deg);
    }
}
/* FIGHT */
@keyframes receiveImpact {
    0%{
        scale: 0;
        opacity: 0;
    }
    20%{
        scale: 2;
        opacity: 1;
    }
    100%{
        scale: 2;
        opacity: 0;
    }
}
@keyframes shoot {
    0%{
        transform: translateY(0);
        scale: 0;
        opacity: 0;
    }
    20%{
        transform: translateY(0);
        scale: 3;
        opacity: 1;
    }
    100%{
        transform: translateY(-2em);
        scale: 1;
        opacity: 0;
    }
}
@keyframes kickback1 {
    0%{
        transform: translate(0, 0);
    }
    10%{
        transform: translateX(calc(var(--blockWidth) / -14));
    }
    15%{
        transform: translateX(calc(var(--blockWidth) / -14));
    }
    100%{
        transform: translate(0, 0);
    }
}
@keyframes kickback2 {
    0%{
        transform: translate(0, 0);
    }
    10%{
        transform: translateX(calc(var(--blockWidth) / 14));
    }
    15%{
        transform: translateX(calc(var(--blockWidth) / 14));
    }
    100%{
        transform: translate(0, 0);
    }
}
@keyframes rotateMarker {
    0%{
        transform:translateX(-50%) rotateY(0) translateY(0);
    }
    25%{
        transform:translateX(-50%) rotateY(90deg) translateY(-0.5em);
    }
    75%{
        transform:translateX(-50%) rotateY(270deg) translateY(.5em);
    }
    100%{
        transform:translateX(-50%) rotateY(360deg) translateY(0);
    }
}
/**
 * ----------------------------------------
 * animation shake-bottom
 * ----------------------------------------
 */
@-webkit-keyframes shake-bottom {
    0%,
    100% {
        -webkit-transform: rotate(0deg);
                transform: rotate(0deg);
        -webkit-transform-origin: 50% 100%;
                transform-origin: 50% 100%;
    }
    10% {
        -webkit-transform: rotate(2deg);
                transform: rotate(2deg);
    }
    20%,
    40%,
    60% {
        -webkit-transform: rotate(-4deg);
                transform: rotate(-4deg);
    }
    30%,
    50%,
    70% {
        -webkit-transform: rotate(4deg);
                transform: rotate(4deg);
    }
    80% {
        -webkit-transform: rotate(-2deg);
                transform: rotate(-2deg);
    }
    90% {
        -webkit-transform: rotate(2deg);
                transform: rotate(2deg);
    }
}
@keyframes shake-bottom {
    0%,
    100% {
        -webkit-transform: rotate(0deg);
                transform: rotate(0deg);
        -webkit-transform-origin: 50% 100%;
                transform-origin: 50% 100%;
    }
    10% {
        -webkit-transform: rotate(2deg);
                transform: rotate(2deg);
    }
    20%,
    40%,
    60% {
        -webkit-transform: rotate(-4deg);
                transform: rotate(-4deg);
    }
    30%,
    50%,
    70% {
        -webkit-transform: rotate(4deg);
                transform: rotate(4deg);
    }
    80% {
        -webkit-transform: rotate(-2deg);
                transform: rotate(-2deg);
    }
    90% {
        -webkit-transform: rotate(2deg);
                transform: rotate(2deg);
    }
}

/* MEDIA QUERIES */

/* Force landscape display */
@media screen and (max-width: 767px) and (orientation: portrait) {
   
    body {
        overflow: hidden;
    }

    .navbar-toggler {
        margin: auto;
        border-color: transparent!important;
    }
    .navbar-brand {
        display: none;
    }

    .navbar-dark .navbar-toggler-icon {
        background-image: url('../svg/chevron-down.svg')!important;
    }
    
    .dropdown{
        cursor: pointer;
    }
 
    .nav-item{
        transform: rotate(-90deg) translateX(30px); 
        transform-origin: right top; 
        cursor: pointer;
    }

    .page-container {
        width: 100vh;
        height: 100vw;
        position: absolute;
        top: 100%;
        margin-top: 50px;
        transform: rotate(-90deg);
        transform-origin: left top;
        overflow: hidden;
    }


    .map {
        width: 88vh;
        height: 98vw;
        left: 1.7em;
        position: absolute;
        margin-top: 5px;
        padding: .5em;
        /* margin-left: 40px; */
    }


    .navigation {
        opacity:0.8;
    }

    .swal2-container.swal2-backdrop-show {
        width: 97vh;
        height: 100vw;
        position: absolute;
        top: 100%;
        margin-top: 50px;
        transform: rotate(-90deg);
        transform-origin: left top;
        overflow-x: hidden;
    }
    .swal2-popup {
        width: fit-content;
        transform: translate(4%,0);
    }
    
}

@media screen and (min-width: 1201px) {
    .map{
        justify-content: flex-start;
        --mapWidth:88vw;
        --blockWidth: calc( var(--mapWidth) / var(--columnCount));
        --blockHeight: calc(90vh / var(--rowCount));
    }
    h2.levelTitle{
        margin-top: 1.5em;
        margin-left: 1.5em;
    }
    .page-container{
        height: 100%;
        margin-top: 1.25em;
    }
    .page-container > .row, .map-container{
        height: 100%;
        display: flex;
    }
    .page-container > .row{
        align-items: center;
    }
    .north, .south, .west, .east{
        transform: translate(-50%, -50%);
    }
    .navigation-container{
        height: 90vh;
        width: 9vw;
    }
    #fightButton{
        margin: auto;
    }
}

@media screen and (max-width: 1200px) {
    .page-container > .row{
        flex-direction: column;
    }
    .map{
        justify-content: flex-start;
        --blockHeight: calc(75vh / var(--rowCount));
        --blockWidth: calc(98vw / var(--columnCount));
    }
    h1 {
        display: none;
    }
    .navigation {
        display: flex;
        justify-content: space-around;
        align-items: flex-start;
    }
    .navigation .south , .navigation .north,  .navigation .east, .navigation .west
    {
      position: initial;
    }
    .map-container{
        max-width: 100%;
        flex: auto;
    }
    .navigation-container{
        width: 90%;
        max-width: unset;
        flex: unset;
    }
}

@media screen and (min-width: 768px) and (max-width: 1200px) {
    .page-container > .row{
        flex-direction: column;
    }
    h2.levelTitle{
        margin-top: 0.25em;
    }
   
}

@media screen and (min-width: 768px) and (max-width: 1200px)  and (orientation:portrait){
    .page-container{
        margin-top: 1.5em;
    }
}
@media screen and (max-width: 767px) and (orientation:portrait){
    .map{
        --blockWidth: calc(81vh / var(--columnCount));
        --blockHeight:calc(92vw / var(--rowCount));
    }
    .page-container > .row{
        width: 90%;
    }
    h2 {
        margin-top: 5px;
    }

}
@media screen and (max-width: 1200px) and (orientation:landscape)
{
    body {
        padding-top: var(--responsiveNavbarHeight);
    }
    .page-container{
        height: 100vh;
    }
    .page-container > .row{
        height: 100%;
    }
    .map-container{
        --mapHeight:calc(90vh - var(--responsiveNavbarHeight));
        height: calc(var(--mapHeight) + var(--mapVerticalPadding));
    }
    .map{
        --blockHeight:calc(var(--mapHeight) / var(--rowCount));
    }
    h2.levelTitle{
        margin-top: 0.25em;
    }
}
@media screen and (max-height: 500px) and (orientation: landscape)
{
    body {
        overflow-y: auto;
    }
    .map-container {
        --mapHeight: calc(82vh - var(--responsiveNavbarHeight));
    }
}